import { RECAPTCHA_BASE_URL } from "ng-recaptcha";

// This file can be replaced during build by using the `fileReplacements` array.
// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.
// The list of file replacements can be found in `angular.json`.

export const environment = {
  production: false,

  //techlive ========= DEV
  // uamBaseUrl: 'http://160.119.101.57:8089/cis_uam/cisorigin.uam/api/v1/',
  // imBaseUrl: 'http://160.119.101.57:8089/cis_uam/cisorigin.im/api/v1/',
  // imSearchBaseUrl: 'http://160.119.101.57:8089/cis_search_uam/cisorigin.search/api/v1/',
  // imReportBaseUrl: 'http://160.119.101.57:8089/cis_uam/cisorigin.cis/api/v1/',

  // dataworld ========= QA
  uamBaseUrl: 'http://10.1.15.226:8089/cis_uam/cisorigin.uam/api/v1/',
  imBaseUrl: 'http://10.1.15.226:8089/cis_uam/cisorigin.im/api/v1/',
  imSearchBaseUrl: 'http://10.1.15.226:8089/cis_search_uam/cisorigin.search/api/v1/',
  imReportBaseUrl: 'http://10.1.15.226:8089/cis_uam/cisorigin.cis/api/v1/',

  // DRDLR ========= PROD
  // uamBaseUrl: 'http://10.10.20.201:8089/cis_uam/cisorigin.uam/api/v1/',
  // imBaseUrl: 'http://10.10.20.201:8089/cis_uam/cisorigin.im/api/v1/',
  // imSearchBaseUrl: 'http://10.10.20.201:8089/cis_search_uam/cisorigin.search/api/v1/',
  // imReportBaseUrl: 'http://10.10.20.201:8089/cis_uam/cisorigin.cis/api/v1/',

  //****************************** UAM **************************************/
  getExternalRoles: 'getRoles?type=EXTERNAL',
  getInternalRoles: 'getRoles?type=INTERNAL',
  getOrganizationTypes: 'getOrgTypes',
  getSectors: 'getSectors',
  getCommunicationTypes: 'getCommunicationTypes',
  getSecurityQuestions: 'getSecurityQuestions',
  getUserInfoByEmail: 'getUserInfoByEmail?email=',
  registerExternalUser: 'registerExternalUser',
  checkUserExist: 'checkUserExist?email=',
  getProvinces: 'getProvinces',
  validatePlsUser: 'validatePlsUser?plscode=',
  checkADUserExists: 'checkADUserExists',
  registerInternalUser: 'registerInternalUser',
  getSections: 'getSections',
  registerInternalUserRole: 'registerInternalUserRole',
  uploadSignedUserAccess: 'uploadSignedUserAccess',
  deleteInternalUserRole: 'deleteInternalUserRole',
  submitInternalUserForApproval: 'submitInternalUserForApproval',
  getInternalUserRolesByEmail: 'getInternalUserRolesByEmail?email=',
  login: 'login',
  updatePassword: 'updatePassword',
  updateSecurityQuestions: 'updateSecurityQuestions',
  getAllInternalUsers: 'getAllInternalUsers?provincecode=all&roleCode=all',
  getAllExternalUsers: 'getAllExternalUsers?provincecode=all&roleCode=all',
  getAllInternalUsersByProvinceCode: 'getAllInternalUsers?provincecode=',
  getAllExternalUsersByProvinceCode: 'getAllExternalUsers?provincecode=',
  deactivateUser: 'deactivateUser',
  deleteExternalUser: 'deleteExternalUser',
  getMyAssistants: 'getMyAssistants?surveyorusercode=',
  getMySurveyors: 'getMySurveyors?assistantusercode=',
  deleteAssistant: 'deleteAssistant',
  updateExternalUser: 'updateExternalUser',
  getAllPlsUsers: 'getAllPlsUsers',
  createCommType: 'createCommType',
  createOrgType: 'createOrgType',
  createSector: 'createSector',
  createSection: 'createSection',
  updateInternalUser: 'updateInternalUser',
  getAllTasks: 'getAllTasks',
  updateAccessRights: 'updateAccessRights',
  getUserSecurityQuestions: 'getUserSecurityQuestions',
  checkUserSecurityQuestions: 'checkUserSecurityQuestions',
  resetPassword: 'resetPassword',
  getRolesBySectionsAndProvince: 'getRolesBySectionsAndProvince?sectionCode=',
  registerPlsUser: 'registerPlsUser',
  updatePlsUser: 'updatePlsUser',
  registerNewExternalRole: 'registerNewExternalRole',
  getExternalRolesByRoleCode: 'getExternalRolesByRoleCode?roleCode=',
  getMenuOfUser: 'getMenuOfUser?roleCode=',
  createTask: 'createTask',
  closeTask: 'closeTask',
  approveRejectUser: 'approveRejectUser',
  downloadSignedUserAccess: 'downloadSignedUserAccess',
  getInternalRolesByRoleCode: 'getInternalRolesByRoleCode?roleCode=',
  getDashboardRights: 'getDashboardRights?userType=Internal&roleCode=',
  setDashboardRights: 'setDashboardRights',
  getUserRegisteredCounts: 'getUserRegisteredCounts?dashBoarID=1',
  userLogReport: 'userLogReport',
  userSummaryReport: 'userSummaryReport',
  quarterlyDeletedUserReport: 'quarterlyDeletedUserReport',
  quarterlyUpdatedUserReport: 'quarterlyUpdatedUserReport',
  issueLogUpdateStatus: 'issueLogUpdateStatus?issueID=',
  getIssueLogStatus: 'getIssueLogStatus',
  getAllIssueLogs: 'getAllIssueLogs',
  saveIssueLog: 'saveIssueLog',
  deactivateUserRole: 'deactivateUserRole',
  uploadDocumentationForExternalUsers: 'uploadDocumentationForInternalUsers',
  downloadDocumentation: 'downloadDocumentation',
  getPpNumber: 'getPpNumber?ppNumber=',
  getUserInfoLite: 'getUserInfoLite?email=',
  getMyIssues: 'getMyIssues?email=',
  getNotifications: 'getNotifications',
  saveNotification: 'saveNotification',
  getNotificationUserTypes: 'getNotificationUserTypes',
  uploadNotificationDoc: 'uploadNotificationDoc',
  deleteNotificationDoc: 'deleteNotificationDoc?documentPath=',
  getNotificationDocsList: 'getNotificationDocsList?notificationId=',
  downloadNotificationDocs: 'downloadNotificationDocs',
  logoutUser: 'logoutUser',
  adUserLoginCheck: 'adUserLoginCheck',
  deleteCommunicationType: 'deleteCommunicationType?commTypeName=', 
  deleteSector: 'deleteSector?sectorName=', 
  deleteOrgnization: 'deleteOrgnization?orgName=', 

  //****************************** IM **************************************/

  getCostCategories: 'getCostCategories',
  getPropertyValueByName: 'getPropertyValueByName?name=',
  getSubCostCategoriesByCostCategoryCode: 'getSubCostCategoriesByCostCategoryCode?costCategoryCode=',
  sendEmailWithInvoice: 'sendEmailWithInvoice?requestCode=',
  setPropertyValueByName: 'setPropertyValueByName',
  createCategory: 'createCategory',
  createSubCategory: 'createSubCategory',
  createRequestKind: 'createRequestKind',
  createRequestType: 'createRequestType',
  createMediaType: 'createMediaType',
  createFormatType: 'createFormatType',
  createDeliveryMethod: 'createDeliveryMethod',
  createGazzetteType: 'createGazzetteType',
  createRequest: 'createRequest',
  createRequestItem: 'createRequestItem',
  deleteRequestItem: 'deleteRequestItem',
  uploadPaymentConfirmation: 'uploadPaymentConfirmation',
  generateInvoice: 'generateInvoice?requestCode=',
  downloadPop: 'downloadPop',
  downloadInvoice: 'downloadInvoice',
  getRequestsOfUser: 'getRequestsOfUser?provinceCode=',
  getRequestItemsOfRequest: 'getRequestItemsOfRequest',
  getCategories: 'getCategories',
  getSubCategiesByCategoryCode: 'getSubCategiesByCategoryCode',
  getRequestTypes: 'getRequestTypes',
  getRequestKinds: 'getRequestKinds',
  getMediaTypes: 'getMediaTypes',
  getFormatTypes: 'getFormatTypes',
  getDeliveryMethods: 'getDeliveryMethods',
  getGazzetteTypes: 'getGazzetteTypes',
  searchByNumberProvinceCode: 'searchByNumberProvinceCode?sGNumber=',
  searchByCompilationNumberProvinceCode: 'searchByCompilationNumberProvinceCode?compilationNumber=',
  searchByFilingNumberProvinceCode: 'searchByFilingNumberProvinceCode?fillingNumber=',
  searchBySurveySGNumberProvinceCode: 'searchBySurveySGNumberProvinceCode?surveyRecordNumber=',
  searchByDeedsNumberProvinceCode: 'searchByDeedsNumberProvinceCode?deedNumber=',
  searchByLeaseNumberProvinceCode: 'searchByLeaseNumberProvinceCode?leaseNumber=',
  searchParcelByFarm: 'searchParcelByFarm?provinceCode=',
  searchParcelByERF: 'searchParcelByERF?provinceCode=',
  searchParcelByHoldings: 'searchParcelByHoldings?provinceCode=',
  searchParcelByLPI: 'searchParcelByLPI?provinceCode=',
  // searchSectionalPortionByTitle: 'searchSectionalPortionByTitle?schemaNumber=',//DM10302&schemeName=IZINTHABA - DM10302
  searchSectionalPortionByFarm: 'searchSectionalPortionByFarm?registrationDivision=', //35241&portionNumber=00761&majorRegion=N0FU0000&farmName=CLAIRWENT THREE
  searchSectionalPortionByERF: 'searchSectionalPortionByERF?townShipName=', //&erfNumber=&portionNumber=00001
  searchSectionalPortionByTitle: 'searchSectionalPortionByTitle?schemaNumber=',
  getTaskTargetFlows: 'getTaskTargetFlows?taskid=',
  getRequestByRequestCode: 'getRequestByRequestCode?requestCode=',
  getOfficersOfMySection: 'getOfficersOfMySection?provinceCode=',
  processUserState: 'processUserState',
  getBulkRequestSubTypesByTypeCode: 'getBulkRequestSubTypesByTypeCode?bulkTypeCode=',
  getBulkRequestTypes: 'getBulkRequestTypes',
  createBulkRequestType: 'createBulkRequestType',
  createBulkSubType: 'createBulkSubType',
  uploadDispatchDocument: 'uploadDispatchDocument',
  deleteDispatchDocument: 'deleteDispatchDocument?documentPath=',
  getDispatchDocsList: 'getDispatchDocsList?requestCode=',
  getTasksLifeCycle: 'getTasksLifeCycle?taskReferenceCode=',
  downloadDispatchDocuments: 'downloadDispatchDocuments',
  uploadExternalUserRequestDocument: 'uploadExternalUserRequestDocument',
  deleteExternalUserRequestDocument: 'deleteExternalUserRequestDocument?documentPath=',
  getExternalUserRequestDocsList: 'getExternalUserRequestDocsList?requestCode=',
  getRequestStatus: 'getRequestStatus?requestcode=',
  getRequestsPaidInfoByProvince: 'getRequestsPaidInfoByProvince?provinceCode=',
  createBusinessRuleHistory: 'createBusinessRuleHistory',
  productionReport: 'productionReport',
  notificationReport: 'notificationReport',
  overriddenBusinessRulesReport: 'overriddenBusinessRulesReport',
  dispatchDocumentSendMail: 'dispatchDocumentSendMail',
  userProductionReport: 'userProductionReport',
  updateCostSubCategory: 'updateCostSubCategory',
  uploadUserPaymentConfirmation: 'uploadUserPaymentConfirmation',
  getNotificationSubTypes: 'getNotificationSubTypes',
  downloadDocuments: 'downloadDocuments',
  getDocumentList: 'getDocumentList?documentStoreCode=',
  deleteDocument: 'deleteDocument?documentPath=',
  uploadDocumentFile: 'uploadDocumentFile',
  getUamDesignations: 'getUamDesignations',
  createUamDesignation: 'createUamDesignation',
  deleteUamDesignation: 'deleteUamDesignation?designationCode=',
  deleteDeliveryMethod: 'deleteDeliveryMethod',
  getCostOfCategory: 'getCostOfCategory?costSubCategoryName=',
  getRequestItemsFilesSendEmail: 'getRequestItemsFilesSendEmail',
  getRequestItemsFilesSendFTP: 'getRequestItemsFilesSendFTP',
  getRegistrationDivision: 'getRegistrationDivision?provinceCode=',
  getTownShipName: 'getTownShipName?provinceCode=',
  getPortionRegistrationDivision: 'getPortionRegistrationDivision?provinceCode=',
  getPortionTownShipName: 'getPortionTownShipName?provinceCode=',
  deleteFormatType: 'deleteFormatType',
  deactivateCategory: 'deactivateCategory',
  deactivateSubCategory: 'deactivateSubCategory',
  getInvoiceAmountDetails: 'getInvoiceAmountDetails?provienceCode', //=PRV003&fromDate=25/OCT/2018&toDate=25/OCT/2019
  sendPopToCashier: 'sendPopToCashier',
  setRequestTrackingNo: 'setRequestTrackingNo?trackingNo=', //UR1234567&requestCode= REQ202
  getRequestTrackingNo: 'getRequestTrackingNo?requestCode=', //REQ202
  getRequestDocuments: 'getRequestDocuments?requestCode=', //REQ250
  cancelRequest: 'cancelRequest',
  getEmailInfo: 'getEmailInfo',
  getEmailInfoById: 'getEmailInfoById?id=',
  updateEmailInfoById: 'updateEmailInfoById',
  getInternalUserData: 'getInternalUserData?provinceCode=', //PRV002&sectionCode=SECN006
  sendPasswordToEmail: 'sendPasswordToEmail?email=',//akrishna8205@gmail.com
  
  //****************************** CAPTCHA **************************************/
  
  captchaSiteKey: '6Lfb1pMUAAAAAL5VRlg2jUtcbiCAkR4DWG6gZUxO'
};

